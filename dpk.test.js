const { deterministicPartitionKey } = require("./dpk");

describe("deterministicPartitionKey", () => {
  it("Returns the literal '0' when given no input", () => {
    const trivialKey = deterministicPartitionKey();
    expect(trivialKey).toBe("0");
  });
  it("Returns the literal '0' when given 'null' input", () => {
    const trivialKey = deterministicPartitionKey(null);
    expect(trivialKey).toBe("0");
  });
  it("Returns the literal '0' when given 'undefined' input", () => {
    const trivialKey = deterministicPartitionKey(undefined);
    expect(trivialKey).toBe("0");
  });
  it("Returns the literal same as partitionkey when given input in less then max partition key length(256)", () => {
    const partitionKey = "eIxZs8igkyCxPqQfhdDK5cW3q8lmnTs3aum9AVDMfOrE3kmfhwvRxXHdzU12DRDwnN6YSNr0299PNDb1bSHEnIYekbttr2BIXfsgkcI7GtZPEvALythw69AUNIuMpSIX706TUc4FehVPFH2D62pTFIXvc48l1MPApeKNxfN6Xo3JbvFH5cXCEabAtYuX33LFaHc83LfsbAPK5suVxJUjevAbvHAgKqSOBiAWVj9ZFIAZutxS2ball8xz7fmQnirb"
    const trivialKey = deterministicPartitionKey({ "partitionKey": partitionKey });
    expect(trivialKey).toBe(partitionKey);
  });
  it("max partition key length is 256", () => {
    const partitionKey = "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"
    const trivialKey = deterministicPartitionKey({ "partitionKey": partitionKey });
    expect(trivialKey.length).toBe(128);
  });
});
